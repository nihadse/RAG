import os
import pandas as pd
import xlwings as xw

def fill_excel_from_csv(csv_path, excel_folder, output_folder):
    os.makedirs(output_folder, exist_ok=True)

    rc_cols = [
        "RC", "رقم السجل التجاري", "Registre de commerce (extracted)",
        "رقم التسجيل", "السجل التجاري", "N° du registre du commerce", "رقم ست"
    ]

    loan_yn_cols = ["هل استفاد المتعامل الاقتصادي من قرض بنكي"]
    loan_date_cols = ["تاريخ اخر استفادة من قرض بنكي"]
    bank_dom_yn_cols = ["هل قام المتعامل الاقتصادي بتوطين بنكي لعمليات استيراد"]
    bank_dom_date_cols = ["تاريخ اخر بتوطين بنكي لعمليات استيراد"]

    csv_column_map = {
        "beneficiaire credit": ("loan_yn", {"Oui": "نعم", "Non": "لا"}),
        "Derniere date effet crédit": ("loan_date", None),
        "Operation import": ("bank_dom_yn", {"Oui": "نعم", "Non": "لا"}),
        "Derniere date import": ("bank_dom_date", None)
    }

    csv_df = pd.read_csv(csv_path, dtype=str).fillna("")
    if "Registre_commerce" not in csv_df.columns:
        print("❌ 'Registre_commerce' column not found in CSV.")
        return

    csv_df.set_index("Registre_commerce", inplace=True)

    for filename in os.listdir(excel_folder):
        if not filename.endswith(".xlsx"):
            continue

        input_file = os.path.join(excel_folder, filename)
        output_file = os.path.join(output_folder, filename)
        print(f"\n📄 Processing: {filename}")

        updated = False

        # ✅ Use App here directly, do NOT use .apps[0]
        app = xw.App(visible=False)
        try:
            wb = app.books.open(input_file)

            for sheet in wb.sheets:
                header_row = None
                header_map = {}

                # Detect header
                for row_num in range(1, 51):
                    values = sheet.range(f"A{row_num}").expand("right").value
                    if not values:
                        continue
                    if any(str(cell).strip() in rc_cols for cell in values if cell):
                        header_row = row_num
                        break

                if not header_row:
                    print(f"⚠️  No RC header in sheet '{sheet.name}'")
                    continue

                headers = sheet.range(f"A{header_row}").expand("right").value

                for idx, col in enumerate(headers):
                    col = str(col).strip()
                    if col in rc_cols:
                        header_map["Registre_commerce"] = idx + 1
                    elif col in loan_yn_cols:
                        header_map["loan_yn"] = idx + 1
                    elif col in loan_date_cols:
                        header_map["loan_date"] = idx + 1
                    elif col in bank_dom_yn_cols:
                        header_map["bank_dom_yn"] = idx + 1
                    elif col in bank_dom_date_cols:
                        header_map["bank_dom_date"] = idx + 1

                if "Registre_commerce" not in header_map:
                    print(f"❌ RC column not found in sheet: {sheet.name}")
                    continue

                row = header_row + 1
                while True:
                    rc_val = sheet.range((row, header_map["Registre_commerce"])).value
                    if not rc_val:
                        break

                    rc_key = str(rc_val).strip()
                    if rc_key in csv_df.index:
                        for csv_col, (target_key, translations) in csv_column_map.items():
                            if target_key in header_map and csv_col in csv_df.columns:
                                value = csv_df.at[rc_key, csv_col]
                                if translations:
                                    value = translations.get(value.strip(), "")
                                sheet.range((row, header_map[target_key])).value = value
                                updated = True
                    row += 1

            if updated:
                wb.save(output_file)
                print(f"✅ Saved: {output_file}")
            else:
                print("ℹ️ No updates made.")
            wb.close()
        finally:
            app.quit()
