import os
import pandas as pd

# Folder containing Excel files
folder_path = "/mnt/data/your_excel_folder/"  # Update path as needed

# Target sheets and columns
target_sheets = ['pm', 'pp']
target_columns = ["N° d'inscription", "N°"]

# Output list
all_data = []

# Loop through each file in the directory
for root, dirs, files in os.walk(folder_path):
    for file in files:
        if file.endswith('.xlsx') or file.endswith('.xls'):
            file_path = os.path.join(root, file)
            try:
                xls = pd.ExcelFile(file_path)
                for sheet_name in target_sheets:
                    if sheet_name in xls.sheet_names:
                        try:
                            df = pd.read_excel(file_path, sheet_name=sheet_name)
                            cols = [col for col in target_columns if col in df.columns]
                            if cols:
                                temp_df = df[cols].copy()
                                temp_df['FileName'] = file
                                temp_df['SheetName'] = sheet_name
                                temp_df['FilePath'] = file_path
                                all_data.append(temp_df)
                        except Exception as e:
                            print(f"Failed to read sheet '{sheet_name}' in file '{file}': {e}")
            except Exception as e:
                print(f"Failed to read file '{file}': {e}")

# Concatenate all data
if all_data:
    final_df = pd.concat(all_data, ignore_index=True)
    output_file = "/mnt/data/consolidated_output.xlsx"
    final_df.to_excel(output_file, index=False)
    print(f"Consolidated file saved to: {output_file}")
else:
    print("No data found in target sheets and columns.")





import os
import pandas as pd

# Define directory where your Excel files are stored
excel_dir = "/mnt/data/your_excel_folder/"

# Columns you want to extract (update based on real names)
target_columns = ['Client Name', 'Account Number']  # Adjust to your need

# Placeholder for all rows
all_data = []

# Walk through all Excel files
for filename in os.listdir(excel_dir):
    if filename.endswith('.xlsx') or filename.endswith('.xls'):
        file_path = os.path.join(excel_dir, filename)
        try:
            xls = pd.ExcelFile(file_path)
            for sheet in xls.sheet_names:
                try:
                    df = pd.read_excel(file_path, sheet_name=sheet)
                    # Filter by existing columns only
                    cols = [col for col in target_columns if col in df.columns]
                    if cols:
                        df_filtered = df[cols].copy()
                        df_filtered['SourceFile'] = filename
                        df_filtered['SheetName'] = sheet
                        all_data.append(df_filtered)
                except Exception as e:
                    print(f"Error reading sheet {sheet} in {filename}: {e}")
        except Exception as e:
            print(f"Error reading file {filename}: {e}")

# Combine everything into one DataFrame
final_df = pd.concat(all_data, ignore_index=True)

# Save final consolidated file
output_path = "/mnt/data/consolidated_output.xlsx"
final_df.to_excel(output_path, index=False)
print(f"Saved consolidated file to: {output_path}")




import pandas as pd
from ayx import Alteryx

# Read the incoming directory file list
df = Alteryx.read("#1")

output = []

# Loop over each Excel file
for path in df['FullPath']:
    if path.endswith('.xlsx') or path.endswith('.xls'):
        try:
            xls = pd.ExcelFile(path)
            for sheet in xls.sheet_names:
                output.append({
                    'FullPath': path,
                    'SheetName': sheet
                })
        except Exception as e:
            print(f"Error reading {path}: {e}")
    else:
        print(f"Skipped: {path}")

# Create a DataFrame from the collected paths and sheets
output_df = pd.DataFrame(output)

# Construct valid metadata required by Alteryx
metadata = {
    'FullPath': {
        'type': 'V_WString',
        'size': 1000,
        'source': 'PythonTool',
        'description': 'Path of the Excel file'
    },
    'SheetName': {
        'type': 'V_WString',
        'size': 255,
        'source': 'PythonTool',
        'description': 'Sheet name in Excel file'
    }
}

# Write the data to the output anchor
Alteryx.write(output_df, 1, metadata)






import pandas as pd
from ayx import Alteryx

df = Alteryx.read("#1")

output = []

for path in df['FullPath']:
    if path.endswith('.xlsx') or path.endswith('.xls'):
        try:
            xls = pd.ExcelFile(path)
            for sheet in xls.sheet_names:
                output.append({
                    'FullPath': path,
                    'SheetName': sheet
                })
        except Exception as e:
            print(f"Error reading {path}: {e}")
    else:
        print(f"Skipped (not Excel): {path}")

output_df = pd.DataFrame(output)

# Define proper metadata for Alteryx output
metadata = {
    'FullPath': {
        'type': 'V_WString',
        'size': 1000,
        'source': 'PythonTool',
        'description': 'Full file path of Excel'
    },
    'SheetName': {
        'type': 'V_WString',
        'size': 255,
        'source': 'PythonTool',
        'description': 'Sheet name inside Excel file'
    }
}

Alteryx.write(output_df, 1, metadata)





import pandas as pd
from ayx import Alteryx
import os

df = Alteryx.read("#1")

output = []

for path in df['FullPath']:
    if path.endswith('.xlsx') or path.endswith('.xls'):
        try:
            xls = pd.ExcelFile(path)
            for sheet in xls.sheet_names:
                output.append({
                    'FullPath': path,
                    'SheetName': sheet
                })
        except Exception as e:
            print(f"Error reading {path}: {e}")
    else:
        print(f"Skipped (not Excel): {path}")

# Create DataFrame
output_df = pd.DataFrame(output)

# Define metadata
metadata = {
    'FullPath': {
        'type': 'V_WString',
        'size': 500
    },
    'SheetName': {
        'type': 'V_WString',
        'size': 255
    }
}

Alteryx.write(output_df, 1, metadata)




import pandas as pd
import os
from ayx import Alteryx

# Read input data from Alteryx (coming from the Directory Tool)
df = Alteryx.read("#1")  # Make sure Python tool is connected to Directory Tool

output = []

for path in df['FullPath']:
    try:
        xls = pd.ExcelFile(path)
        for sheet in xls.sheet_names:
            output.append({
                'FullPath': path,
                'SheetName': sheet
            })
    except Exception as e:
        print(f"Error reading {path}: {e}")
        continue

# Output the sheet name and file path to next Alteryx tools
Alteryx.write(pd.DataFrame(output), 1)





[FullPath] + "|||SheetName=" + [SheetName]



InputPathWithSheet


import pandas as pd
from ayx import Alteryx

df = Alteryx.read("#1")  # From Directory Tool
output = []

for path in df['FullPath']:
    try:
        xls = pd.ExcelFile(path)
        for sheet in xls.sheet_names:
            output.append({
                'FullPath': path,
                'SheetName': sheet
            })
    except:
        pass

Alteryx.write(pd.DataFrame(output), 1)
